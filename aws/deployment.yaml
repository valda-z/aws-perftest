apiVersion: v1
kind: Namespace
metadata:
  name: perftest
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: perftest
  namespace: perftest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: perftest
  template:
    metadata:
      labels:
        app: perftest
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: agentpool
                operator: In
                values:
                - nodepool1
      imagePullSecrets:
      - name: regcred
      containers:
        - name: perftest
          image:  507187134850.dkr.ecr.eu-west-1.amazonaws.com/perftest:latest
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: '1'
              memory: 1G
            limits:
              cpu: '1'
              memory: 1G
      tolerations:
      - key: virtual-kubelet.io/provider
        operator: Exists
      topologySpreadConstraints:
      - maxSkew: 1
        nodeAffinityPolicy: Honor
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
---
apiVersion: v1
kind: Service
metadata:
  name: perftest-service
  namespace: perftest
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-healthy-threshold: '2'
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: '5'
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: '6'
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: '3'
spec:
  type: LoadBalancer
  ports:
    - targetPort: 80
      name: port80
      port: 80
      protocol: TCP
  selector:
    app: perftest
---
apiVersion: v1
kind: Service
metadata:
  name: perftest-service-internal
  namespace: perftest
spec:
  type: ClusterIP
  ports:
    - targetPort: 80
      name: port80
      port: 80
      protocol: TCP
  selector:
    app: perftest
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/healthcheck-path: /testsimple
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '6'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    kubernetes.io/ingress.class: alb
  name: alb-ingress-perftest
  namespace: perftest
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: perftest-service-internal
                port:
                  number: 80
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: hpa-perftest
  namespace: perftest
spec:
  maxReplicas: 128
  minReplicas: 8
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: perftest
  targetCPUUtilizationPercentage: 10